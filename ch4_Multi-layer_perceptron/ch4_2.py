# -*- coding: utf-8 -*-
"""ch4_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dYVIIImz96qVC4fKIlqmHxiiOKQzvYhh
"""

cd drive/My\ Drive/ML_hw

pwd

import numpy as np
import pandas as pd
import copy
import random
import matplotlib.pyplot as plt

import keras
from keras.models import Sequential
from keras.layers import Dense,Activation
from keras.optimizers import SGD,Adam

np.random.seed(0)

df = pd.read_csv('forestfires.csv')
df

mon = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec']
df = df.drop(['day'],axis=1)
for i, m in enumerate(mon):
  df = df.replace(m, i)
df = df.apply(pd.to_numeric, errors='ignore')
df = (df - df.mean()) / (df.std())

df

data = np.array(df, dtype=np.float64)

data

model = Sequential()

model.add(Dense(256, input_dim=x.shape[1], activation='tanh'))
model.add(Dense(256, activation='tanh'))
model.add(Dense(128, activation='tanh'))
model.add(Dense(1, activation='tanh'))
 
sgd = SGD(lr=0.001, decay=1e-6)
model.compile(loss='mse', optimizer=sgd)
print(model.summary())

random.shuffle(data)
x, y = data[:, :-1], data[:, -1].reshape((data.shape[0], 1))

history = model.fit(x, y, validation_split=0.8, epochs=100, batch_size=16)

epochs=range(len(history.history['loss']))

plt.figure()
plt.plot(epochs,history.history['loss'],'b',label='Training loss')
plt.plot(epochs,history.history['val_loss'],'r',label='Validation val_loss')
plt.title('Traing and Validation loss')
plt.legend()
plt.savefig('4_2.svg')

