# -*- coding: utf-8 -*-
"""ch_7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HwvKrmG3Y957c48k6nWHrIZOeE1Tykfo
"""

cd drive/My\ Drive/ML_hw

pwd

import numpy as np
import copy
import random
import matplotlib.pyplot as plt

np.random.seed(0)

x =[
  # 1
  [0.697, 0.460],
  # 2
  [0.774, 0.376],
  # 3
  [0.634, 0.264],
  # 4
  [0.608, 0.318],
  # 5
  [0.556, 0.215],
  # 6
  [0.403, 0.237],
  # 7
  [0.481, 0.149],
  # 8
  [0.437, 0.211],
  # 9
  [0.666, 0.091],
  # 10
  [0.243, 0.267],
  # 11
  [0.245, 0.057],
  # 12
  [0.343, 0.099],
  # 13
  [0.639, 0.161],
  # 14
  [0.657, 0.198],
  # 15
  [0.360, 0.370],
  # 16
  [0.593, 0.042],
  # 17
  [0.719, 0.103],
  # 18
  [0.359, 0.188],
  # 19
  [0.339, 0.241],
  # 20
  [0.282, 0.257],
  # 21
  [0.748, 0.232],
  # 22
  [0.714, 0.346],
  # 23
  [0.483, 0.312],
  # 24
  [0.478, 0.437],
  # 25
  [0.525, 0.369],
  # 26
  [0.751, 0.489],
  # 27
  [0.532, 0.472],
  # 28
  [0.473, 0.376],
  # 29
  [0.725, 0.445],
  # 30
  [0.446, 0.459]
]

x = np.asarray(x)

from sklearn.cluster import KMeans
from sklearn.datasets import make_blobs

init1 = np.asarray([[0.1, 0.1], [0.2, 0.2], [0.5, 0.5], [0.9, 0.8]])
init2 = np.asarray([[0.2, 0.5], [0.4, 0.2], [0.3, 0.1], [0.2, 0.8]])
init3 = np.asarray([[0.4, 0.5], [0.2, 0.1], [0.9, 0.1], [0.1, 0.4]])

fig = plt.figure(figsize=(12, 4))
# ax = fig.add_subplot(111)
# ax.set_aspect('equal', adjustable='box')

plt.subplot(131)
inti = init1
y_pred = KMeans(n_clusters=4, init=inti).fit_predict(x)
plt.scatter(inti[:, 0], inti[:, 1], marker='^', c= 'r')
plt.scatter(x[:, 0], x[:, 1], c=y_pred)
plt.title("K-means result1")
plt.xlim([0,1])
plt.ylim([0,1])
plt.tight_layout()
# ax = plt.gca()
# ax.set_aspect(1)


plt.subplot(132)
inti = init2
y_pred = KMeans(n_clusters=4, init=inti).fit_predict(x)
plt.scatter(inti[:, 0], inti[:, 1], marker='^', c= 'r')
plt.scatter(x[:, 0], x[:, 1], c=y_pred)
plt.title("K-means result2")
plt.xlim([0,1])
plt.ylim([0,1])
plt.tight_layout()

plt.subplot(133)
inti = init3
y_pred = KMeans(n_clusters=4, init=inti).fit_predict(x)
plt.scatter(inti[:, 0], inti[:, 1], marker='^', c= 'r')
plt.scatter(x[:, 0], x[:, 1], c=y_pred)
plt.title("K-means result3")
plt.xlim([0,1])
plt.ylim([0,1])
plt.tight_layout()
plt.savefig('7_init.svg')

fig = plt.figure(figsize=(12, 4))
# ax = fig.add_subplot(111)
# ax.set_aspect('equal', adjustable='box')

plt.subplot(131)
y_pred = KMeans(n_clusters=2).fit_predict(x)
plt.scatter(x[:, 0], x[:, 1], c=y_pred)
plt.title("K-means result (k=2)")
plt.xlim([0.1,0.9])
plt.ylim([0,0.6])
plt.tight_layout()
# ax = plt.gca()
# ax.set_aspect(1)


plt.subplot(132)
y_pred = KMeans(n_clusters=3).fit_predict(x)
plt.scatter(x[:, 0], x[:, 1], c=y_pred)
plt.title("K-means result (k=3)")
plt.xlim([0.1,0.9])
plt.ylim([0,0.6])
plt.tight_layout()

plt.subplot(133)
y_pred = KMeans(n_clusters=4).fit_predict(x)
plt.scatter(x[:, 0], x[:, 1], c=y_pred)
plt.title("K-means result (k=3)")
plt.xlim([0.1,0.9])
plt.ylim([0,0.6])
plt.tight_layout()

plt.savefig('7_n.svg')

